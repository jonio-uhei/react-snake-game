{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","OppositeDirection","Delta","DirectionKeyCodeMap","37","38","39","40","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","position","delta","newPosition","isEatingMyself","newBody","removingTrack","pop","unshift","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bb5dc211.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n  const upVisibility = difficulty < 5 ? '' : 'is-hidden'\n  const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n  const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n  const onDownDifficulty = () => onChangeDifficulty(difficulty -1)\n\n\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation-item\">\n          <span className=\"navigation-label\">Length: </span>\n          <div className=\"navigation-item-number-container\">\n            <div className=\"num-board\">{length}</div>\n          </div>\n      </div>\n      <div className=\"navigation-item\">\n        <span className=\"navigation-label\">Difficulty: </span>\n        <div className=\"navigation-item-number-container\">\n           <span className=\"num-board\">{difficulty}</span>\n           <div className=\"difficulty-button-container\">\n             <div\n               className={`difficulty-button difficulty-up ${upVisibility}`}\n               onClick={onUpDifficulty}\n             ></div>\n             <div\n               className={`difficulty-button difficulty-down ${downVisibility}`}\n               onClick={onDownDifficulty}\n             ></div>\n           </div>\n         </div>\n      </div>\n    </div>\n  )\n};\n\n\nexport default Navigation;","import React from 'react';\n\nconst Field = ({fields}) => {\n  return (\n    <div className=\"field\">\n      {\n        fields.map((row) =>{\n          return row.map((column) =>{\n            return <div className={`dots ${column}`}></div>\n          })\n        })\n      }\n    </div>\n  );\n};\n\nexport default Field;","import React from 'react';\n\nconst Button = ({status,onStart,onStop,onRestart}) => {\n  return (\n    <div className=\"button\">\n      { status === \"gameover\" && <button className=\"btn btn-gameover\" onClick={onRestart}>gameover</button> }\n      { status === \"init\" && <button className=\"btn btn-init\" onClick={onStart}>start</button> }\n      { status === \"suspended\" && <button className=\"btn btn-suspended\" onClick={onStart}>start</button> }\n      { status === \"playing\" && <button className=\"btn btn-playing\" onClick={onStop}>stop</button> }\n    </div>\n  )\n};\n\nexport default Button;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n import {\n   faArrowLeft,\n   faArrowUp,\n   faArrowDown,\n   faArrowRight\n } from '@fortawesome/free-solid-svg-icons'\n\n\nconst ManipulationPanel = ({onChange}) => {\n  const onUp = () => onChange('up')\n  const onRight = () => onChange('right')\n  const onLeft = () => onChange('left')\n  const onDown = () => onChange('down')\n\n  return (\n    <div className=\"manipulation-panel\">\n      <button className=\"manipulation-btn btn btn-left\" onClick={onLeft}>\n         <FontAwesomeIcon icon={faArrowLeft} />\n       </button>\n       <div>\n       <button className=\"manipulation-btn btn btn-up\" onClick={onUp}>\n           <FontAwesomeIcon icon={faArrowUp} />\n       </button>\n       <button className=\"manipulation-btn btn btn-down\" onClick={onDown}>\n         <FontAwesomeIcon icon={faArrowDown} />\n       </button>\n       </div>\n       <button className=\"manipulation-btn btn btn-right\" onClick={onRight}>\n        <FontAwesomeIcon icon={faArrowRight} />\n       </button>\n    </div>\n  );\n};\n\nexport default ManipulationPanel;\n","export const getFoodPosition = (fieldSize,excludes) => {\n  while(true){\n    const x = Math.floor(Math.random()*(fieldSize -1 -1)) + 1\n    const y = Math.floor(Math.random()*(fieldSize -1 -1)) + 1\n    const conflict = excludes.some(item => item.x === x && item.y === y)\n    if(!conflict){\n    return {x,y}\n    }\n  }\n}\n\nexport const initFields = (fieldSize,snake) => {\n  const fields = []\n  for(let i = 0;i < fieldSize;i++){\n    const cols = new Array(fieldSize).fill('')\n    fields.push(cols)\n  }\n\n  fields[snake.y][snake.x] = 'snake'\n\n  const food = getFoodPosition(fieldSize,[snake])\n  fields[food.y][food.x] = 'food'\n  return fields\n}","import React,{useCallback,useEffect,useState} from 'react'\nimport Navigation from './components/Navigation'\nimport Field from './components/Field'\nimport Button from './components/Button'\nimport ManipulationPanel from './components/ManipulationPanel'\nimport { initFields, getFoodPosition } from './utils'\n\n\nconst initialPosition = {x:17,y:17}\nconst initialValues = initFields(35,initialPosition)\nconst defaultInterval = 300\nconst defaultDifficulty = 3\nconst Difficulty = [1000,500,100,50,10]\n\n\n\nconst GameStatus = Object.freeze({\n  init:'init',\n  playing:'playing',\n  suspended:'suspended',\n  gameover:'gameover'\n})\n\nconst Direction = Object.freeze({\n  up:'up',\n  right:'right',\n  left:'left',\n  down:'down'\n})\n\nconst OppositeDirection = Object.freeze({\n  up:'down',\n  right:'left',\n  left:'right',\n  down:'up'\n})\n\nconst Delta = Object.freeze({\n  up:{x:0,y:-1},\n  right:{x:1,y:0},\n  left:{x:-1,y:0},\n  down:{x:0,y:1},\n})\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37:Direction.left,\n  38:Direction.up,\n  39:Direction.right,\n  40:Direction.down\n})\n\nlet timer = undefined\n\nconst unsubscribe = () => {\n  if(!timer){\n    return\n  }\n  clearInterval(timer)\n  \n}\n\nconst isCollision = (fieldSize, position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n  if (position.y > fieldSize - 1 || position.x > fieldSize - 1) {\n    return true;\n  }\n  return false;\n}\n\nconst isEatingMyself = (fields,position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\n\nfunction App() {\n  const [fields,setFields] = useState(initialValues)\n  const [body,setBody] = useState([])\n  const [status,setStatus] = useState(GameStatus.init)\n  const [direction,setDirection] = useState(Direction.up)\n  const [difficulty, setDifficulty] = useState(3)\n  const [tick,setTick] = useState(defaultDifficulty)\n\n  useEffect(()=>{\n    setBody([initialPosition])\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(()=>{\n      setTick(tick => tick + 1)\n    }, interval)\n    return unsubscribe\n  }, [difficulty])\n\n  useEffect(()=>{\n    if(body.length === 0 || status !== GameStatus.playing){\n      return \n    }\n    const canContinue =handleMoving()\n     if (!canContinue) {\n       setStatus(GameStatus.gameover)\n     }\n  },[tick])\n\n  const onStart = () => setStatus(GameStatus.playing)\n\n  const onStop = () => setStatus(GameStatus.suspended)\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick +1)\n    },defaultInterval)\n    setDirection(Direction.up)\n    setStatus(GameStatus.init)\n    setBody(initialPosition)\n    setFields(initFields(35,initialPosition))\n  }\n\n  const handleMoving = ()=>{\n    const{x,y} = body[0]\n    const delta = Delta[direction]\n    const newPosition = {\n      x:x + delta.x,\n      y:y + delta.y\n    }\n\n    if (isCollision(fields.length, newPosition) || isEatingMyself(fields,newPosition)) {\n      unsubscribe()\n      return false\n    }\n\n    const newBody = [...body]\n\n    if(fields[newPosition.y][newPosition.x] !== 'food'){\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n\n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)\n    setBody(newBody)\n    setFields(fields)\n    return true\n  }\n  \n  const onChangeDirection = useCallback((newDirection) => {\n    if(status !== GameStatus.playing){\n      return direction\n    }\n    if(OppositeDirection[direction] === newDirection){\n      return \n    }\n    setDirection(newDirection)\n  },[direction,status])\n\n  const onChangeDifficulty = useCallback((difficulty) => {\n    if (status !== GameStatus.init) {\n      return\n    }\n    if (difficulty < 1 || difficulty > Difficulty.length) {\n      return\n    }\n    setDifficulty(difficulty)\n  }, [status, difficulty])\n\n\n  useEffect(()=>{\n    const handleKeyDown = (e) =>{\n      const newDirection = DirectionKeyCodeMap[e.keyCode]\n      if(!newDirection){\n        return\n      }\n      onChangeDirection(newDirection)\n    }\n    document.addEventListener('keydown',handleKeyDown)\n    return () =>document.removeEventListener('keydown',handleKeyDown)\n  },[onChangeDirection])\n \n  return (\n    <div className=\"App\">\n       <header className=\"header\">\n         <div className=\"title-container\">\n           <h1 className=\"title\">Snake Game</h1>\n         </div>\n         <Navigation \n          length={body.length} \n          difficulty={difficulty}\n          onChangeDifficulty={onChangeDifficulty}\n         />\n       </header>\n       <main className=\"main\">\n         <Field fields={fields}/>\n       </main>\n\n       <footer className=\"footer\">\n         <Button \n          status={status} \n          onStop={onStop}\n          onStart={onStart} \n          onRestart={onRestart}\n         />\n         <ManipulationPanel onChange={onChangeDirection}/>\n       </footer>\n    </div>\n  );\n}\n\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}